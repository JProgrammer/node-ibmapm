#!/bin/bash
if [ $# -lt 2 ]; then
	echo "Usage: $0 <kafka-topic> <output file>"
	exit 2
fi

FROM_BEGINNING_FLAG=
if [ $# -ge 3 ]; then
	FROM_BEGINNING_FLAG="${3}"
fi

echo "-----------------enter $0-------------------"

echo "Output file is $2"
echo "Query topic $1 from kafka service ..."
KAFKA_TOPIC=$1
## in the agent docker container
OUTPUT_FILE=$2

ZOOKEEPER_HOST=${ZOOKEEPER_URL}

rm -f "${OUTPUT_FILE}" >/dev/null 2>&1
 
echo "begin to write messages into ${OUTPUT_FILE}"

## read the message 
echo "/opt/kafka/bin/kafka-console-consumer.sh  --zookeeper ${ZOOKEEPER_HOST}  --topic \"${KAFKA_TOPIC}\"  ${FROM_BEGINNING_FLAG} >  \"${OUTPUT_FILE}\" 2>&1 &"
/opt/kafka/bin/kafka-console-consumer.sh  --zookeeper ${ZOOKEEPER_HOST}  --topic "${KAFKA_TOPIC}"  ${FROM_BEGINNING_FLAG} >  "${OUTPUT_FILE}" 2>&1 &
PID=$!
echo "Kafka console consumer process: ${PID}"

## wait for 2 minutes
echo "Wait for 2 minutes to collect messages ..."
sleep 120

## kill the kafka consumer
kill -9 ${PID} >/dev/null 2>&1

## verify the output message
OUTPUT=$(cat ${OUTPUT_FILE})
COUNT=`echo $OUTPUT| awk -F'"resourceID"' '{ print NF}'`
echo "Get total ${COUNT} messages during last 2 minutes in Kafka topic ${KAFKA_TOPIC}"

if [ 0 -eq ${COUNT} ] ; then     
		echo "-----------------exit $0-------------------"  
        echo "No messages of topic ${KAFKA_TOPIC} generated by DC, please check the agent log file"        
        exit -1
else   
		echo "-----------------exit $0-------------------" 
        echo "Collected messages successfully"
	exit 0
fi     
